package Util::Importer {

  #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  # import modules 
  #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  use strict;
  use warnings;

  use lib 'lib/';
  use Util::Encoder;

  ##############################################################################
  # Import subroutine
  ##############################################################################
  sub Import {
  
    #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # get data passed to function 
    #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    my $debugger = shift;
    my $state = shift;
   
    #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # other vars 
    #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    my @seed = split //, $state->{seed};
    my %seed_data;
    my $key_counter = -1;
    my $value = '';

    # check seed start
    if ($seed[0] =~ m/[0-9]/) {
      die "Invalid seed.";
    }
    
    # print debug message
    $debugger->write("[IMPRT]: Using seed: $state->{seed}");

    #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # decompose the seed
    #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    foreach my $current_char (@seed) {
      if ($current_char !~ m/[0-9]/) {
        $key_counter++;
        $seed_data{$key_counter} = 'NULL';
        $value = '';
        next;
      }
      if ($current_char =~ m/[0-9]/) {
        $value = $value . $current_char;
        $seed_data{$key_counter} = $value;
      }
    }

    #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # check difficulty and set default
    #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    if ($seed_data{0} eq 'NULL') {
      $seed_data{0} = 0;
    }

    #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    # return data
    #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    return(%seed_data);
  }

  # perl needs this
  1;
}
